name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "version to release"
        type: string
        required: true

env:
  GODOT_VERSION: 4.3
  EXPORT_NAME: "FakeRealGame"

jobs:
  export:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [ Linux, Windows ]
    container:
      image: barichello/godot-ci:4.3
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup
        run: |
          mkdir -v -p ~/.config/
          cp -r /root/.config/godot ~/.config
          mkdir -v -p ~/.local/share/godot/export_templates/
          cp -r /root/.local/share/godot/export_templates ~/.local/share/godot/
          mkdir -v -p build

      - name: Build Windows
        if: ${{ matrix.target == 'Windows' }}
        env:
          VERSION: ${{ inputs.version }}
        run: godot --headless --verbose --export-release "Windows Desktop" "build/$EXPORT_NAME-$VERSION.exe"

      - name: Build Linux
        if: ${{ matrix.target == 'Linux' }}
        env:
          VERSION: ${{ inputs.version }}
        run: godot --headless --verbose --export-release "Linux" "build/$EXPORT_NAME-$VERSION.x86_64"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: "build"
          if-no-files-found: error
          retention-days: 1

  release:
    permissions:
      contents: write
  
    runs-on: ubuntu-latest
    steps:
      - name: Download Windows release
        uses: actions/download-artifact@v5
        with:
          path: build/windows
          name: "Windows"

      - name: ZIP Windows
        run: 7z a -tzip Windows.zip -w build/windows/.

      - name: Download Linux release
        uses: actions/download-artifact@v5
        with:
          path: build/linux
          name: "Linux"

      - name: ZIP Linux
        run: 7z a -tzip Linux.zip -w build/linux/.

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.version }}
          fail_on_unmatched_files: true
          files: |
            Linux.zip
            Windows.zip
